import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.css";
import Link from "next/link";
import { collection, getDocs, getFirestore } from "firebase/firestore";
import { app } from "@/firebase";
import { useEffect, useState } from "react";
import { Group, Card, Text, Flex, Container } from "@mantine/core";
import { IconPlus } from "@tabler/icons";

const inter = Inter({ subsets: ["latin"] });

type Blog = {
  title: string;
  description: string;
  codeBlocks: {
    language: string;
    code: string;
  }[];
};
export default function Home() {
  // get list of blogs from firestore

  const [blogs, setBlogs] = useState<Blog[]>([]);
  console.log("blogs", blogs);

  useEffect(() => {
    const db = getFirestore(app);
    const blogRef = collection(db, "blogs");
    getDocs(blogRef).then((querySnapshot) => {
      querySnapshot.forEach((doc) => {
        // extract data from doc.data()
        const data = doc.data();
        const blog = {
          title: data.title,
          description: data.description,
          codeBlocks: data.codeBlocks,
        };
        setBlogs((prev) => [...prev, blog]);
      });
      setBlogs((prev) => {
        const unique = prev.filter(
          (blog, index, self) =>
            index === self.findIndex((t) => t.title === blog.title)
        );
        return unique;
      });
    });
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Container size="md" mt="xl">
          <Flex
            style={{
              flexWrap: "wrap",
            }}
            gap="sm"
            align="center"
          >
            {blogs.map((blog) => (
              <Link
                key={blog.title.slice(0, 10)}
                href={{
                  pathname: `/blog/${blog.title.slice(0, 10)}`,
                  query: {
                    blog: JSON.stringify(blog),
                  },
                }}
              >
                <Card
                  withBorder
                  w="250px"
                  h="250px"
                  style={{
                    cursor: "pointer",
                  }}
                >
                  <Text fz="xl" weight={600} lineClamp={2} mb="lg">
                    {blog.title}
                  </Text>
                  <Text lineClamp={5}>{blog.description}</Text>
                </Card>
              </Link>
            ))}

            <Link href="/create">
              <Card
                withBorder
                w="250px"
                h="250px"
                style={{
                  cursor: "pointer",
                }}
              >
                <Flex justify="center" align="center" h="100%">
                  <IconPlus size={50} />
                </Flex>
              </Card>
            </Link>
          </Flex>
        </Container>
      </main>
    </>
  );
}
